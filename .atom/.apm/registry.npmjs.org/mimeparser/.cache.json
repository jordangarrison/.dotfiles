{"_id":"mimeparser","_rev":"9-3fc2c0aca46c31bc49b0e7939d05031c","name":"mimeparser","description":"Parse a mime tree, no magic included.","dist-tags":{"latest":"0.3.8"},"versions":{"0.3.6":{"name":"mimeparser","version":"0.3.6","homepage":"https://github.com/whiteout-io/mimeparser","description":"Parse a mime tree, no magic included.","author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"keywords":["mime"],"license":"MIT","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/whiteout-io/mimeparser.git"},"main":"src/mimeparser","dependencies":{"mimefuncs":"https://github.com/whiteout-io/mimefuncs/tarball/v0.3.2","addressparser":"https://github.com/whiteout-io/addressparser/tarball/v0.1.2"},"devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-mocha-phantomjs":"~0.4.0","grunt-contrib-connect":"~0.6.0","grunt-contrib-jshint":"~0.8.0","mocha":"~1.16.2","requirejs":"~2.1.10","stringencoding":"https://github.com/whiteout-io/stringencoding/tarball/v0.1.0","grunt-mocha-test":"~0.10.0","sinon":"^1.9.0","amdefine":"~0.1.0"},"bugs":{"url":"https://github.com/whiteout-io/mimeparser/issues"},"_id":"mimeparser@0.3.6","_shasum":"d4f73eb6227eff23cef8229d0571d50e1aa57149","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"}],"dist":{"shasum":"d4f73eb6227eff23cef8229d0571d50e1aa57149","tarball":"https://registry.npmjs.org/mimeparser/-/mimeparser-0.3.6.tgz"},"deprecated":"Moved to emailjs-mime-parser","directories":{}},"0.3.7":{"name":"mimeparser","version":"0.3.7","homepage":"https://github.com/whiteout-io/mimeparser","description":"Parse a mime tree, no magic included.","author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"keywords":["mime"],"license":"MIT","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/whiteout-io/mimeparser.git"},"main":"src/mimeparser","dependencies":{"mimefuncs":"~0.3.4","wo-addressparser":"~0.1.3"},"devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-mocha-phantomjs":"~0.4.0","grunt-contrib-connect":"~0.6.0","grunt-contrib-jshint":"~0.8.0","mocha":"~1.16.2","requirejs":"~2.1.10","wo-stringencoding":"~0.1.1","grunt-mocha-test":"~0.10.0","sinon":"^1.9.0","amdefine":"~0.1.0"},"bugs":{"url":"https://github.com/whiteout-io/mimeparser/issues"},"_id":"mimeparser@0.3.7","_shasum":"09dfe96e8ad80eb0a14d4d10c0e595631d4b1aaf","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"dist":{"shasum":"09dfe96e8ad80eb0a14d4d10c0e595631d4b1aaf","tarball":"https://registry.npmjs.org/mimeparser/-/mimeparser-0.3.7.tgz"},"deprecated":"Moved to emailjs-mime-parser","directories":{}},"0.3.8":{"name":"mimeparser","version":"0.3.8","homepage":"https://github.com/whiteout-io/mimeparser","description":"Parse a mime tree, no magic included.","author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"keywords":["mime"],"license":"MIT","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/whiteout-io/mimeparser.git"},"main":"src/mimeparser","dependencies":{"mimefuncs":"~0.3.5","wo-addressparser":"~0.1.3"},"devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-mocha-phantomjs":"~0.4.0","grunt-contrib-connect":"~0.6.0","grunt-contrib-jshint":"~0.8.0","mocha":"~1.16.2","requirejs":"~2.1.10","wo-stringencoding":"~0.1.1","grunt-mocha-test":"~0.10.0","sinon":"^1.9.0","amdefine":"~0.1.0"},"bugs":{"url":"https://github.com/whiteout-io/mimeparser/issues"},"_id":"mimeparser@0.3.8","_shasum":"d516e4374814ad02906989151f161318829336c4","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"dist":{"shasum":"d516e4374814ad02906989151f161318829336c4","tarball":"https://registry.npmjs.org/mimeparser/-/mimeparser-0.3.8.tgz"},"deprecated":"Moved to emailjs-mime-parser","directories":{}}},"readme":"# mimeparser\n\nLib for parsing mime streams.\n\n## Scope\n\nThis is supposed to be a \"low level\" mime parsing module. No magic is performed on the data (eg. no joining HTML parts etc.). All body data is emitted out as Typed Arrays, so no need to perform any base64 or quoted printable decoding by yourself. Text parts are decoded to UTF-8 if needed.\n\n[![Build Status](https://travis-ci.org/whiteout-io/mimeparser.png?branch=master)](https://travis-ci.org/whiteout-io/mimeparser)\n\n## Installation\n\n### [npm](https://www.npmjs.org/):\n\n    npm install --save mimeparser\n\n## Dependencies\n\nThis module depends on [mimefuncs](https://github.com/whiteout-io/mimefuncs) and [wo-addressparser](https://github.com/whiteout-io/addressparser) . The dependency will be fetched automatically. Please use your require config accordingly.\n\n## Usage\n\n### AMD\n\n    var MimeParser = require('mimeparser');\n\n### non-AMD\n\n    <script src=\"mimeparser\"></script>\n    // exposes MimeParser the constructor to the global object\n\n### Feed data to the parser\n\nFeed data with `write(chunk)`. Where `chunk` is supposed to be an Uint8Array or a 'binary' string.\n\n```javascript\nparser.write('Subject: test\\n\\nHello world!');\n```\n\nWhen all data is feeded to the parser, call `end()`\n\n```javascript\nparser.end();\n```\n\n### Receiveing the output\n\nYou can receive the output by creating appropriate event handler functions.\n\n#### Headers\n\nTo receive node headers, define `onheader` function\n\n```javascript\nparser.onheader = function(node){\n    console.log(node.header.join('\\n')); // List all headers\n    console.log(node.headers['content-type']); // List value for Content-Type\n};\n```\n\n#### Body\n\nBody is emitted in chunks of Typed Arrays, define `onbody` to catch these chunks\n\n```javascript\nparser.onbody = function(node, chunk){\n    console.log('Received %s bytes for %s', chunk.byteLength, node.path.join(\".\"));\n};\n```\n\n#### Parse end\n\nWhen the parsing is finished, `onend` is called\n\n```javascript\nparser.onend = function(){\n    console.log('Parsing is finished');\n};\n```\n\n## Quirks\n\nThis seems like asynchronous but actually it is not. So always define `onheader`, `onbody` and `onend` before writing the first chunk of data to the parser.\n\n**message/rfc822** is automatically parsed if the mime part does not have a `Content-Disposition: attachment` header, otherwise it will be emitted as a regular attachment (as one long Uint8Array value).\n\n## Hands on\n\n```bash\ngit clone git@github.com:whiteout-io/mimeparser.git\ncd mimeparser\nnpm install && npm test\n```\n\n## License\n\n    Copyright (c) 2013 Andris Reinman\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n","maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"time":{"modified":"2016-01-13T00:34:40.634Z","created":"2014-07-25T11:19:29.138Z","0.3.6":"2014-07-25T11:19:29.138Z","0.3.7":"2014-07-25T13:35:56.717Z","0.3.8":"2014-07-28T16:45:31.280Z"},"homepage":"https://github.com/whiteout-io/mimeparser","keywords":["mime"],"repository":{"type":"git","url":"git://github.com/whiteout-io/mimeparser.git"},"author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"bugs":{"url":"https://github.com/whiteout-io/mimeparser/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"W/\"56959ba0-223e\"","_lastModified":"Wed, 13 Jan 2016 00:34:40 GMT","_cached":true}