{"_id":"wo-imap-handler","_rev":"10-3b20fabdb15732f685aa883a1f8198b6","name":"wo-imap-handler","description":"Parse and compile IMAP commands","dist-tags":{"latest":"0.1.14"},"versions":{"0.1.11":{"name":"wo-imap-handler","main":"src/imap-handler.js","version":"0.1.11","homepage":"https://github.com/whiteout-io/imap-handler","author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"description":"Parse and compile IMAP commands","keywords":["IMAP","parser"],"license":"MIT","scripts":{"test":"grunt"},"dependencies":{},"devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-mocha-phantomjs":"~0.4.0","grunt-contrib-connect":"~0.6.0","grunt-contrib-jshint":"~0.8.0","grunt-mocha-test":"~0.8.1","mocha":"~1.16.2","phantomjs":"~1.9.7-1","requirejs":"~2.1.10"},"_id":"wo-imap-handler@0.1.11","_shasum":"8f0cfb9250c9140670621fc1b460c4d74beb8560","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"}],"dist":{"shasum":"8f0cfb9250c9140670621fc1b460c4d74beb8560","tarball":"https://registry.npmjs.org/wo-imap-handler/-/wo-imap-handler-0.1.11.tgz"},"directories":{}},"0.1.12":{"name":"wo-imap-handler","main":"src/imap-handler.js","version":"0.1.12","homepage":"https://github.com/whiteout-io/imap-handler","author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"description":"Parse and compile IMAP commands","keywords":["IMAP","parser"],"license":"MIT","scripts":{"test":"grunt"},"dependencies":{},"devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-mocha-phantomjs":"~0.4.0","grunt-contrib-connect":"~0.6.0","grunt-contrib-jshint":"~0.8.0","grunt-mocha-test":"~0.8.1","mocha":"~1.16.2","phantomjs":"~1.9.7-1","requirejs":"~2.1.10"},"gitHead":"f0d2903c035315b2fe8ef76475a990bbbfb1da47","_id":"wo-imap-handler@0.1.12","_shasum":"c54534e5b04e645a7ba35f17b06afc7d7e7ef2b3","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"dist":{"shasum":"c54534e5b04e645a7ba35f17b06afc7d7e7ef2b3","tarball":"https://registry.npmjs.org/wo-imap-handler/-/wo-imap-handler-0.1.12.tgz"},"directories":{}},"0.1.13":{"name":"wo-imap-handler","main":"src/imap-handler.js","version":"0.1.13","homepage":"https://github.com/whiteout-io/imap-handler","author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"description":"Parse and compile IMAP commands","keywords":["IMAP","parser"],"license":"MIT","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/whiteout-io/imap-handler.git"},"dependencies":{},"devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-mocha-phantomjs":"~0.4.0","grunt-contrib-connect":"~0.6.0","grunt-contrib-jshint":"~0.8.0","grunt-mocha-test":"~0.8.1","mocha":"~1.16.2","phantomjs":"~1.9.7-1","requirejs":"~2.1.10"},"gitHead":"b539f48b53954d444e4dde55c16247e78471fe7e","bugs":{"url":"https://github.com/whiteout-io/imap-handler/issues"},"_id":"wo-imap-handler@0.1.13","_shasum":"dbf2b1e5518f54d31275b1997a2f3fb05af5c40b","_from":".","_npmVersion":"2.1.2","_nodeVersion":"0.10.32","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"dist":{"shasum":"dbf2b1e5518f54d31275b1997a2f3fb05af5c40b","tarball":"https://registry.npmjs.org/wo-imap-handler/-/wo-imap-handler-0.1.13.tgz"},"directories":{}},"0.1.14":{"name":"wo-imap-handler","main":"src/imap-handler.js","version":"0.1.14","homepage":"https://github.com/whiteout-io/imap-handler","author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"description":"Parse and compile IMAP commands","keywords":["IMAP","parser"],"license":"MIT","scripts":{"test":"grunt"},"repository":{"type":"git","url":"git://github.com/whiteout-io/imap-handler.git"},"dependencies":{},"devDependencies":{"chai":"~1.8.1","grunt":"~0.4.1","grunt-mocha-phantomjs":"~0.4.0","grunt-contrib-connect":"~0.6.0","grunt-contrib-jshint":"~0.8.0","grunt-mocha-test":"~0.8.1","mocha":"~1.16.2","phantomjs":"~1.9.7-1","requirejs":"~2.1.10"},"gitHead":"40afe261b9240a96ed29d6f4a4f7aa92c83f3383","bugs":{"url":"https://github.com/whiteout-io/imap-handler/issues"},"_id":"wo-imap-handler@0.1.14","_shasum":"acf631b2a57cef1c82245c332c2255e82b79835c","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.10.35","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"dist":{"shasum":"acf631b2a57cef1c82245c332c2255e82b79835c","tarball":"https://registry.npmjs.org/wo-imap-handler/-/wo-imap-handler-0.1.14.tgz"},"directories":{}}},"readme":"# IMAP Handler\n\nUMD module that parses and compiles IMAP commands.\n\n[![Build Status](https://travis-ci.org/whiteout-io/imap-handler.png?branch=master)](https://travis-ci.org/whiteout-io/imap-handler)\n\n## Install\n\n### [npm](https://www.npmjs.org/):\n\n    npm install wo-imap-handler\n\n## Usage\n\n### Parse IMAP commands\n\nTo parse a command you need to have the command as one complete string (including all literals) without the ending &lt;CR&gt;&lt;LF&gt;\n\n    imapHandler.parser(imapCommand);\n\nWhere\n\n  * **imapCommand** is an IMAP string without the final line break\n\nThe function returns an object in the following form:\n\n```\n{\n    tag: \"TAG\",\n    command: \"COMMAND\",\n    attributes: [\n        {type: \"SEQUENCE\", value: \"sequence-set\"},\n        {type: \"ATOM\", value: \"atom\", section:[section_elements], partial: [start, end]},\n        {type: \"STRING\", value: \"string\"},\n        {type: \"LITERAL\", value: \"literal\"},\n        [list_elements]\n    ]\n}\n```\n\nWhere\n\n  * **tag** is a string containing the tag\n  * **command** is the first element after tag\n  * **attributes** (if present) is an array of next elements\n\nIf section or partial values are not specified in the command, the values are also missing from the ATOM element\n\n**NB!** Sequence numbers are identified as ATOM values if the value contains only numbers.\n**NB!** NIL atoms are always identified as `null` values, even though in some cases it might be an ATOM with value `\"NIL\"`\n\nFor example\n\n```javascript\nvar imapHandler = require(\"imap-handler\");\n\nimapHandler.parser(\"A1 FETCH *:4 (BODY[HEADER.FIELDS ({4}\\r\\nDate Subject)]<12.45> UID)\");\n```\n\nResults in the following value:\n\n```json\n{\n    \"tag\": \"A1\",\n    \"command\": \"FETCH\",\n    \"attributes\": [\n        [\n            {\n                \"type\": \"SEQUENCE\",\n                \"value\": \"*:4\"\n            },\n            {\n                \"type\": \"ATOM\",\n                \"value\": \"BODY\",\n                \"section\": [\n                    {\n                        \"type\": \"ATOM\",\n                        \"value\": \"HEADER.FIELDS\"\n                    },\n                    [\n                        {\n                            \"type\": \"LITERAL\",\n                            \"value\": \"Date\"\n                        },\n                        {\n                            \"type\": \"ATOM\",\n                            \"value\": \"Subject\"\n                        }\n                    ]\n                ],\n                \"partial\": [\n                    12,\n                    45\n                ]\n            },\n            {\n                \"type\": \"ATOM\",\n                \"value\": \"UID\"\n            }\n        ]\n    ]\n}\n```\n\n### Compile command objects into IMAP commands\n\nYou can \"compile\" parsed or self generated IMAP command obejcts to IMAP command strings with\n\n    imapHandler.compiler(commandObject, asArray);\n\nWhere\n\n  * **commandObject** is an object parsed with `imapHandler.parser()` or self generated\n  * **asArray** if set to `true` return the value as an array instead of a string where the command is split on LITERAL notions\n  * **isLogging** if set to true, do not include literals and long strings, useful when logging stuff and do not want to include message bodies etc. Additionally nodes with `sensitive: true` options are also not displayed (useful with logging passwords) if `logging` is used.\n\nThe function returns a string or if `asArray` is set to true, as an array which is split on LITERAL notions, eg. \"{4}\\r\\nabcde\" becomes [\"{4}\\r\\n\", \"abcde\"]. This is useful if you need to wait for \"+\" response from the server before you can transmit the literal data.\n\nThe input object differs from the parsed object with the following aspects:\n\n  * **string**, **number** and **null** (null values are all non-number and non-string falsy values) are allowed to use directly - `{type: \"STRING\", value: \"hello\"}` can be replaced with `\"hello\"`\n  * Additional types are used: `SECTION` which is an alias for `ATOM` and `TEXT` which returns the input string as given with no modification (useful for server messages).\n\nFor example\n\n```javascript\nvar command = {\n    tag: \"*\",\n    command: \"OK\",\n    attributes: [\n        {\n            type: \"SECTION\",\n            section: [\n                {type: \"ATOM\", value: \"ALERT\"}\n            ]\n        },\n        {type:\"TEXT\", value: \"NB! The server is shutting down\"}\n    ]\n};\n\nimapHandler.compiler(command);\n// * OK [ALERT] NB! The server is shutting down\n```\n\n## License\n\n```\nCopyright (c) 2013 Andris Reinman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n","maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"time":{"modified":"2015-02-18T17:35:32.615Z","created":"2014-07-25T11:07:53.379Z","0.1.11":"2014-07-25T11:07:53.379Z","0.1.12":"2014-10-01T08:59:52.978Z","0.1.13":"2014-10-13T10:51:18.870Z","0.1.14":"2015-02-18T17:35:32.615Z"},"homepage":"https://github.com/whiteout-io/imap-handler","keywords":["IMAP","parser"],"author":{"name":"Andris Reinman","email":"andris@kreata.ee"},"license":"MIT","readmeFilename":"README.md","repository":{"type":"git","url":"git://github.com/whiteout-io/imap-handler.git"},"bugs":{"url":"https://github.com/whiteout-io/imap-handler/issues"},"_attachments":{},"_etag":"W/\"54e4cd64-2d17\"","_lastModified":"Wed, 18 Feb 2015 17:35:32 GMT","_cached":true}