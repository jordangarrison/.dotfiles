{"_id":"wo-stringencoding","_rev":"5-16f59cf4449bac8d07ff4304222cc3bc","name":"wo-stringencoding","description":"Polyfill for the Encoding Living Standard's API.","dist-tags":{"latest":"0.1.1"},"versions":{"0.1.1":{"name":"wo-stringencoding","author":{"name":"Joshua Bell","email":"inexorabletash@gmail.com"},"contributors":[{"name":"Rick Eyre"}],"version":"0.1.1","description":"Polyfill for the Encoding Living Standard's API.","main":"dist/stringencoding.js","repository":{"type":"git","url":"https://github.com/inexorabletash/stringencoding.git"},"keywords":["encoding","decoding"],"bugs":{"url":"https://github.com/inexorabletash/stringencoding/issues"},"homepage":"https://github.com/inexorabletash/stringencoding","devDependencies":{"browserify":"~3.24.13","grunt":"~0.4.2","grunt-browserify":"~1.3.0","grunt-contrib-uglify":"~0.4.0","grunt-contrib-clean":"*"},"_id":"wo-stringencoding@0.1.1","_shasum":"43b2221522329d89fef4f409ded418bc8b454ccd","_from":".","_npmVersion":"1.4.10","_npmUser":{"name":"felixhammerl","email":"mail@felixhammerl.com"},"maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"}],"dist":{"shasum":"43b2221522329d89fef4f409ded418bc8b454ccd","tarball":"https://registry.npmjs.org/wo-stringencoding/-/wo-stringencoding-0.1.1.tgz"},"deprecated":"Moved to emailjs-stringencoding","directories":{}}},"readme":"stringencoding\n==============\n\nThis is a polyfill for the [Encoding Living Standard](http://encoding.spec.whatwg.org/)\nAPI for the Web, allowing encoding and decoding of textual data to and from Typed Array\nbuffers for binary data in JavaScript\n\nBasic examples and unit tests are included.\n\n### API Overview ###\n\nScripts\n```html\n  <!-- Required for non-Unicode encodings -->\n  <script src=\"encoding-indexes.js\"></script>\n\n  <script src=\"encoding.js\"></script>\n```\n\nBasic Usage\n\n```js\n  var uint8array = TextEncoder(encoding).encode(string);\n  var string = TextDecoder(encoding).decode(uint8array);\n```\n\nStreaming Decode\n\n```js\n  var string = \"\", decoder = TextDecoder(encoding), buffer;\n  while (buffer = next_chunk()) { \n    string += decoder.decode(buffer, {stream:true});\n  }\n  string += decoder.decode(); // finish the stream\n```\n\n### Encodings ###\n\nAll encodings from the Encoding specification are supported:\n\nutf-8 ibm864 ibm866 iso-8859-2 iso-8859-3 iso-8859-4 iso-8859-5 iso-8859-6 \niso-8859-7 iso-8859-8 iso-8859-10 iso-8859-13 iso-8859-14 iso-8859-15 iso-8859-16 \nkoi8-r koi8-u macintosh windows-874 windows-1250 windows-1251 windows-1252 \nwindows-1253 windows-1254 windows-1255 windows-1256 windows-1257 windows-1258 \nx-mac-cyrillic gbk gb18030 hz-gb-2312 big5 euc-jp iso-2022-jp shift_jis euc-kr \niso-2022-kr utf-16 utf-16be\n\n(Some encodings may be supported under other names, e.g. ascii, iso-8859-1, etc.\nSee [Encoding](http://encoding.spec.whatwg.org/) for additional labels for each encoding.)\n\nEncodings other than utf-8, utf-16 and utf-16be require an additional \n`encoding-indexes.js` file to be included. It is rather large \n(539kB uncompressed, 182kB gzipped); portions may be deleted if \nsupport for some encodings is not required.\n","maintainers":[{"name":"felixhammerl","email":"mail@felixhammerl.com"},{"name":"tanx","email":"info@tankredhase.de"},{"name":"andris","email":"andris@kreata.ee"}],"time":{"modified":"2016-01-06T23:11:11.315Z","created":"2014-07-25T13:05:44.618Z","0.1.1":"2014-07-25T13:05:44.618Z"},"homepage":"https://github.com/inexorabletash/stringencoding","keywords":["encoding","decoding"],"repository":{"type":"git","url":"https://github.com/inexorabletash/stringencoding.git"},"contributors":[{"name":"Rick Eyre"}],"author":{"name":"Joshua Bell","email":"inexorabletash@gmail.com"},"bugs":{"url":"https://github.com/inexorabletash/stringencoding/issues"},"readmeFilename":"README.md","_attachments":{},"_etag":"W/\"568d9f0f-f15\"","_lastModified":"Wed, 06 Jan 2016 23:11:11 GMT","_cached":true}