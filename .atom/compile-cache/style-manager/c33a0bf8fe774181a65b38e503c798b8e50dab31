{"source":"atom-text-editor {\n  background-color: #0f1317;\n  color: #245c94;\n}\n.invisible-character {\n  color: transparent;\n}\n.indent-guide {\n  box-shadow: inset 1px;\n  color: #df6221;\n  opacity: 0.3;\n}\n.selection .invisible-character {\n  color: #586e75;\n}\n.gutter {\n  background-color: #13181d;\n}\n.gutter .line-number {\n  color: #495c6f;\n  opacity: 1;\n}\n.gutter .line-number.folded,\n.gutter .line-number:after,\n.fold-marker:after {\n  color: #96a9bb;\n}\n.cursor {\n  border-color: #ffffff;\n}\n.selection .region {\n  background-color: rgba(100, 156, 212, 0.2);\n}\n.line-number.cursor-line-no-selection {\n  background-color: #1d252d;\n}\n.tab-bar .syntax--tab.active::before {\n  background: #495c6f;\n}\n.tab-bar .syntax--tab.active[data-type=\"TextEditor\"]::after {\n  background: #0f1317;\n  border-color: rgba(100, 156, 212, 0.2);\n}\n.bracket-matcher .region {\n  background-color: #948ac4;\n  opacity: 0.3;\n}\n.syntax--comment {\n  color: #90a5c7;\n  font-style: italic;\n}\n.syntax--entity {\n  color: #e59d1b;\n}\n.syntax--keyword {\n  color: #859900;\n}\n.syntax--storage.syntax--type {\n  color: #859900;\n}\n.syntax--constant {\n  color: #f2ce8d;\n}\n.syntax--constant.syntax--numeric,\n.syntax--constant.syntax--boolean {\n  color: #bdf223;\n}\n.syntax--variable {\n  color: #bdd0de;\n}\n.syntax--delimiter,\n.syntax--brace {\n  color: #5787ab;\n}\n.syntax--delimiter.syntax--period {\n  color: #859900;\n}\n.syntax--invalid.syntax--deprecated {\n  text-decoration: underline;\n  color: #f4c2c1;\n}\n.syntax--invalid.syntax--illegal {\n  color: #f4c2c1;\n}\n.syntax--string {\n  color: #e7422c;\n}\n.syntax--string .syntax--constant.syntax--character.syntax--escape {\n  color: #f4c2c1;\n}\n.syntax--string.syntax--regexp {\n  color: #2aa198;\n}\n.syntax--string.syntax--regexp .syntax--source.syntax--ruby.syntax--embedded,\n.syntax--string.syntax--regexp .syntax--string.syntax--regexp.syntax--arbitrary-repitition {\n  color: #f4c2c1;\n}\n.wrap-guide {\n  background-color: transparent;\n  border-left: dotted 1px #df6221;\n  opacity: 0.5;\n}\n.syntax--source.syntax--json .leading-whitespace + .syntax--string,\n.syntax--source.syntax--json .hard-tab + .syntax--string {\n  color: #90a5c7;\n}\n.syntax--source.syntax--json .leading-whitespace + .syntax--string .syntax--punctuation,\n.syntax--source.syntax--json .hard-tab + .syntax--string .syntax--punctuation {\n  color: #90a5c7;\n}\n.syntax--source.syntax--json .syntax--key-value,\n.syntax--source.syntax--json .syntax--pair {\n  color: #859900;\n}\n.syntax--source.syntax--json .syntax--expected-dictionary-separator {\n  color: #9b3912;\n}\n.syntax--source.syntax--json .syntax--constant {\n  color: #e59d1b;\n}\n.syntax--source.syntax--php .syntax--keyword {\n  color: #7fa1d8;\n}\n.syntax--source.syntax--php .syntax--keyword.syntax--operator {\n  color: #90a5c7;\n}\n.syntax--source.syntax--php .syntax--entity:not(.inherited-class) {\n  color: #bdd0de;\n}\n.syntax--source.syntax--php .syntax--type {\n  color: #245c94;\n}\n.syntax--source.syntax--php .syntax--punctuation:not(.variable),\n.syntax--source.syntax--php .syntax--modifier {\n  color: #8ea9c3;\n}\n.syntax--source.syntax--php .syntax--punctuation.syntax--string {\n  color: #e7422c;\n}\n.syntax--source.syntax--php .syntax--comment,\n.syntax--source.syntax--php .syntax--comment.syntax--punctuation {\n  color: #495a75;\n}\n.syntax--source.syntax--php .syntax--phpdoc.syntax--keyword {\n  color: #516fa0;\n  font-style: normal;\n}\n.syntax--source.syntax--php .syntax--name.syntax--function {\n  color: #e59d1b;\n}\n.syntax--source.syntax--php .syntax--function-call {\n  color: #6e87b6;\n}\n.syntax--source.syntax--php .syntax--constant {\n  color: #e59d1b;\n}\n.syntax--source.syntax--php .syntax--property {\n  color: #6e87b6;\n}\n.syntax--source.syntax--php .syntax--numeric {\n  color: #bdf223;\n}\n","deprecationMessage":"Starting from Atom v1.13.0, the contents of `atom-text-editor` elements are no longer encapsulated within a shadow DOM boundary. This means you should stop using `:host` and `::shadow` pseudo-selectors, and prepend all your syntax selectors with `syntax--`. To prevent breakage with existing style sheets, Atom will automatically upgrade the following selectors:\n\n* `.tab-bar .tab.active::before` => `.tab-bar .syntax--tab.active::before`\n\n* `.tab-bar .tab.active[data-type=\"TextEditor\"]::after` => `.tab-bar .syntax--tab.active[data-type=\"TextEditor\"]::after`\n\n* `.comment` => `.syntax--comment`\n\n* `.entity` => `.syntax--entity`\n\n* `.keyword` => `.syntax--keyword`\n\n* `.storage.type` => `.syntax--storage.syntax--type`\n\n* `.constant` => `.syntax--constant`\n\n* `.constant.numeric,\n.constant.boolean` => `.syntax--constant.syntax--numeric,\n.syntax--constant.syntax--boolean`\n\n* `.variable` => `.syntax--variable`\n\n* `.delimiter,\n.brace` => `.syntax--delimiter,\n.syntax--brace`\n\n* `.delimiter.period` => `.syntax--delimiter.syntax--period`\n\n* `.invalid.deprecated` => `.syntax--invalid.syntax--deprecated`\n\n* `.invalid.illegal` => `.syntax--invalid.syntax--illegal`\n\n* `.string` => `.syntax--string`\n\n* `.string .constant.character.escape` => `.syntax--string .syntax--constant.syntax--character.syntax--escape`\n\n* `.string.regexp` => `.syntax--string.syntax--regexp`\n\n* `.string.regexp .source.ruby.embedded,\n.string.regexp .string.regexp.arbitrary-repitition` => `.syntax--string.syntax--regexp .syntax--source.syntax--ruby.syntax--embedded,\n.syntax--string.syntax--regexp .syntax--string.syntax--regexp.syntax--arbitrary-repitition`\n\n* `.source.json .leading-whitespace + .string,\n.source.json .hard-tab + .string` => `.syntax--source.syntax--json .leading-whitespace + .syntax--string,\n.syntax--source.syntax--json .hard-tab + .syntax--string`\n\n* `.source.json .leading-whitespace + .string .punctuation,\n.source.json .hard-tab + .string .punctuation` => `.syntax--source.syntax--json .leading-whitespace + .syntax--string .syntax--punctuation,\n.syntax--source.syntax--json .hard-tab + .syntax--string .syntax--punctuation`\n\n* `.source.json .key-value,\n.source.json .pair` => `.syntax--source.syntax--json .syntax--key-value,\n.syntax--source.syntax--json .syntax--pair`\n\n* `.source.json .expected-dictionary-separator` => `.syntax--source.syntax--json .syntax--expected-dictionary-separator`\n\n* `.source.json .constant` => `.syntax--source.syntax--json .syntax--constant`\n\n* `.source.php .keyword` => `.syntax--source.syntax--php .syntax--keyword`\n\n* `.source.php .keyword.operator` => `.syntax--source.syntax--php .syntax--keyword.syntax--operator`\n\n* `.source.php .entity:not(.inherited-class)` => `.syntax--source.syntax--php .syntax--entity:not(.inherited-class)`\n\n* `.source.php .type` => `.syntax--source.syntax--php .syntax--type`\n\n* `.source.php .punctuation:not(.variable),\n.source.php .modifier` => `.syntax--source.syntax--php .syntax--punctuation:not(.variable),\n.syntax--source.syntax--php .syntax--modifier`\n\n* `.source.php .punctuation.string` => `.syntax--source.syntax--php .syntax--punctuation.syntax--string`\n\n* `.source.php .comment,\n.source.php .comment.punctuation` => `.syntax--source.syntax--php .syntax--comment,\n.syntax--source.syntax--php .syntax--comment.syntax--punctuation`\n\n* `.source.php .phpdoc.keyword` => `.syntax--source.syntax--php .syntax--phpdoc.syntax--keyword`\n\n* `.source.php .name.function` => `.syntax--source.syntax--php .syntax--name.syntax--function`\n\n* `.source.php .function-call` => `.syntax--source.syntax--php .syntax--function-call`\n\n* `.source.php .constant` => `.syntax--source.syntax--php .syntax--constant`\n\n* `.source.php .property` => `.syntax--source.syntax--php .syntax--property`\n\n* `.source.php .numeric` => `.syntax--source.syntax--php .syntax--numeric`\n\nAutomatic translation of selectors will be removed in a few release cycles to minimize startup time. Please, make sure to upgrade the above selectors as soon as possible."}